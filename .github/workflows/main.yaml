name: CI Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t fastapi .
      - name: Push Docker image
        uses: actions/checkout@v2
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          context: .
          image: fastapi
          registry: docker.io

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: fastapi
          path: .docker

      - name: Load Docker image
        run: docker load -i .docker/image.tar

      - name: Run tests
        run: docker run fastapi pytest

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test_results/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    # env:
    #   KUBERNETES_CLUSTER_CA_CERTIFICATE: ${{ secrets.KUBERNETES_CLUSTER_CA_CERTIFICATE }}
    #   KUBERNETES_AUTH_TOKEN: ${{ secrets.KUBERNETES_AUTH_TOKEN }}
    steps:
      - name: Download latest Docker image
        uses: actions/download-artifact@v2
        with:
          name: fastapi
          path: .docker

      - name: Load Docker image
        run: docker load -i .docker/image.tar

      # - name: Apply Kubernetes manifests
      #   uses: azure/k8s-action@v3
      #   with:
      #     cluster_name: your-cluster-name
      #     use_internal_ip: false
      #     manifests: |
      #       # Replace with your deployment and service manifests
      #       deployment.yaml
      #       service.yaml

      # - name: Wait for pod readiness
      #   run: kubectl wait --for=condition=ready pods/<your-pod-name> -n <your-namespace> --timeout=300s
